name: deploy

on:
    push:
        branches:
            - master

jobs:
    deploy:
        runs-on: ubuntu-20.04
        steps:
            - uses: actions/checkout@v2.3.4
            - uses: actions/setup-node@v2.1.2
              with:
                  node-version: '14.x'
            - uses: actions/cache@v2.1.2
              with:
                  path: ~/.pnpm-store
                  key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-
            - run: npm i -g pnpm@5.10
            - run: pnpm install
            - run: make all
            - name: bcc
              working-directory: ./bcc
              run: |
                  pnpm add @cloudflare/wrangler
                  echo "$BCC_WEBHOOK_PATH" | pnpx wrangler secret put 'BCC_WEBHOOK_PATH'
                  echo "$BCC_BOT_TOKEN" | pnpx wrangler secret put 'BCC_BOT_TOKEN'
                  echo "$DB_API" | pnpx wrangler secret put 'DB_API'
                  echo "$DB_TOKEN" | pnpx wrangler secret put 'DB_TOKEN'
                  echo "$ROLLBAR_KEY" | pnpx wrangler secret put 'ROLLBAR_KEY'
                  pnpx wrangler publish
                  curl "https://api.telegram.org/bot${BCC_BOT_TOKEN}/setWebhook?url=https%3A%2F%2Fworker.h11.io%2Ftelegram%2Fbcc%2F${BCC_WEBHOOK_PATH}"
              env:
                  CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
                  BCC_WEBHOOK_PATH: ${{ secrets.BCC_WEBHOOK_PATH }}
                  BCC_BOT_TOKEN: ${{ secrets.BCC_BOT_TOKEN }}
                  DB_API: ${{ secrets.DB_API }}
                  DB_TOKEN: ${{ secrets.DB_TOKEN }}
                  ROLLBAR_KEY: ${{ secrets.ROLLBAR_KEY }}
            - name: rollbar
              working-directory: ./rollbar
              run: |
                  pnpm add @cloudflare/wrangler
                  echo "$ROLLBAR_TG_BOT_TOKEN" | pnpx wrangler secret put 'ROLLBAR_TG_BOT_TOKEN'
                  echo "$ROLLBAR_TG_CHAT_ID" | pnpx wrangler secret put 'ROLLBAR_TG_CHAT_ID'
                  pnpx wrangler publish
              env:
                  CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
                  ROLLBAR_TG_BOT_TOKEN: ${{ secrets.ROLLBAR_TG_BOT_TOKEN }}
                  ROLLBAR_TG_CHAT_ID: ${{ secrets.ROLLBAR_TG_CHAT_ID }}
            - name: feedbox
              working-directory: ./feedbox
              run: |
                  pnpm add @cloudflare/wrangler
                  pnpx wrangler publish
              env:
                  CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
            - name: heroku-pg-backup
              working-directory: ./heroku-pg-backup
              run: |
                  pnpm add @cloudflare/wrangler
                  echo "$ROLLBAR_KEY" | pnpx wrangler secret put 'ROLLBAR_KEY'
                  echo "$PG_BACKUP_HEROKU_APP" | pnpx wrangler secret put 'PG_BACKUP_HEROKU_APP'
                  echo "$PG_BACKUP_HEROKU_TOKEN" | pnpx wrangler secret put 'PG_BACKUP_HEROKU_TOKEN'
                  echo "$PG_BACKUP_B2_KEY_ID" | pnpx wrangler secret put 'PG_BACKUP_B2_KEY_ID'
                  echo "$PG_BACKUP_B2_KEY" | pnpx wrangler secret put 'PG_BACKUP_B2_KEY'
                  echo "$PG_BACKUP_B2_REGION" | pnpx wrangler secret put 'PG_BACKUP_B2_REGION'
                  echo "$PG_BACKUP_B2_BUCKET_ID" | pnpx wrangler secret put 'PG_BACKUP_B2_BUCKET_ID'
                  pnpx wrangler publish
              env:
                  CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
                  ROLLBAR_KEY: ${{ secrets.ROLLBAR_KEY }}
                  PG_BACKUP_HEROKU_APP: ${{ secrets.PG_BACKUP_HEROKU_APP }}
                  PG_BACKUP_HEROKU_TOKEN: ${{ secrets.PG_BACKUP_HEROKU_TOKEN }}
                  PG_BACKUP_B2_KEY_ID: ${{ secrets.PG_BACKUP_B2_KEY_ID }}
                  PG_BACKUP_B2_KEY: ${{ secrets.PG_BACKUP_B2_KEY }}
                  PG_BACKUP_B2_REGION: ${{ secrets.PG_BACKUP_B2_REGION }}
                  PG_BACKUP_B2_BUCKET_ID: ${{ secrets.PG_BACKUP_B2_BUCKET_ID }}
