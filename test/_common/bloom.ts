import { fromStr } from "../../src/_common/uint8array.js"
import { murmur, xxh32 } from "../../src/_common/bloom.js"

describe("BloomFilter", () => {
	test("xxh32", () => {
		// https://github.com/Jason3S/xxhash/blob/main/src/xxHash32.test.ts
		const cases = [
			["a", 0x550d7456],
			["ab", 0x4999fc53],
			["abc", 0x32d153ff],
			["abcd", 0xa3643705],
			["abcde", 0x9738f19b],
			["ab".repeat(10), 0x244fbf7c],
			["abc".repeat(100), 0x55cad6be],
			["My text to hash ðŸ˜Š", 0xaf7fd356],
		] as [string, number][]
		cases.forEach(([i, o]) => {
			expect(xxh32(fromStr(i))).toBe(o)
		})
		expect(xxh32(fromStr("a"), 1)).toBe(4111757423)
		expect(xxh32(fromStr("a"), 2 ** 32 - 1)).toBe(3443684653)
	})

	test("murmur", () => {
		const cases = [
			[[], 3164544308],
			[[0x08], 422599524],
			[[0x17], 3168152998],
			[[0x9a], 3195034349],
			[[0x1c], 2651681383],
			[[0x4d, 0x76], 2447836956],
			[[0x52, 0xd5], 3854228105],
			[[0x91, 0xf7], 31066776],
			[[0xd6, 0x27], 1806091603],
			[[0x30, 0x46, 0x0b], 3808221797],
			[[0x56, 0xdc, 0xd6], 2157698265],
			[[0xd4, 0x52, 0x33], 1721992661],
			[[0x6a, 0xb5, 0xf4], 2469105222],
			[[0x67, 0x53, 0x81, 0x1c], 118283265],
			[[0x69, 0xb8, 0xc0, 0x88], 3416318611],
			[[0x1e, 0x84, 0xaf, 0x2d], 3315003572],
			[[0x46, 0xdc, 0x54, 0xbe], 447346355],
			[[0xd0, 0x7a, 0x6e, 0xea, 0x56], 4255445370],
			[[0x86, 0x83, 0xd5, 0xa4, 0xd8], 2390603402],
			[[0xb7, 0x46, 0xbb, 0x77, 0xce], 2048907743],
			[[0x6c, 0xa8, 0xbc, 0xe5, 0x99], 2177978500],
			[[0x5c, 0x5e, 0xe1, 0xa0, 0x73, 0x81], 1036846008],
			[[0x08, 0x5d, 0x73, 0x1c, 0xe5, 0x2e], 229980482],
			[[0x42, 0xfb, 0xf2, 0x52, 0xb4, 0x10], 3655585422],
			[[0x73, 0xe1, 0xff, 0x56, 0x9c, 0xce], 3502708029],
			[[0x5c, 0xbe, 0x97, 0x75, 0x54, 0x9a, 0x52], 815120748],
			[[0x16, 0x82, 0x39, 0x49, 0x88, 0x2b, 0x36], 3056033698],
			[[0x59, 0x77, 0xf0, 0xa7, 0x24, 0xf4, 0x78], 587205227],
			[[0xd3, 0xa5, 0x7c, 0x0e, 0xc0, 0x02, 0x07], 2030937252],
			[[0x31, 0x1b, 0x98, 0x75, 0x96, 0x22, 0xd3, 0x9a], 469635402],
			[[0x38, 0xd6, 0xf7, 0x28, 0x20, 0xb4, 0x8a, 0xe9], 3530274698],
			[[0xbb, 0x18, 0x5d, 0xf4, 0x12, 0x03, 0xf7, 0x99], 1974545809],
			[[0x80, 0xd4, 0x3b, 0x3b, 0xae, 0x22, 0xa2, 0x78], 3563570120],
			[
				[0x1a, 0xb5, 0xd0, 0xfe, 0xab, 0xc3, 0x61, 0xb2, 0x99],
				2706087434,
			],
			[
				[0x8e, 0x4a, 0xc3, 0x18, 0x20, 0x2f, 0x06, 0xe6, 0x3c],
				1534654151,
			],
			[
				[0xb6, 0xc0, 0xdd, 0x05, 0x3f, 0xc4, 0x86, 0x4c, 0xef],
				2355554696,
			],
			[
				[0x9a, 0x5f, 0x78, 0x0d, 0xaf, 0x50, 0xe1, 0x1f, 0x55],
				1400800912,
			],
			[
				[0x22, 0x6f, 0x39, 0x1f, 0xf8, 0xdd, 0x4f, 0x52, 0x17, 0x94],
				3420325137,
			],
			[
				[0x32, 0x89, 0x2a, 0x75, 0x48, 0x3a, 0x4a, 0x02, 0x69, 0xdd],
				3427803584,
			],
			[
				[0x06, 0x92, 0x5c, 0xf4, 0x88, 0x0e, 0x7e, 0x68, 0x38, 0x3e],
				1152407945,
			],
			[
				[0xbd, 0x2c, 0x63, 0x38, 0xbf, 0xe9, 0x78, 0xb7, 0xbf, 0x15],
				3382479516,
			],
		] as [number[], number][]
		cases.forEach(([i, o]) => {
			expect(murmur(Uint8Array.from(i))).toBe(o)
		})
	})
})
