name: deploy

on:
    push:
        branches:
            - master

jobs:
    deploy:
        runs-on: ubuntu-20.04
        steps:
            - uses: actions/checkout@v2.4.0
            - uses: actions/setup-node@v2.5.1
              with:
                  node-version: "16.x"
            - uses: actions/cache@v2.1.7
              with:
                  path: ~/.pnpm-store
                  key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: ${{ runner.os }}-pnpm-
            - run: |
                  npm install -g pnpm@6
                  pnpm add -g @cloudflare/wrangler@1.19.7
                  pnpm install
                  pnpm store prune

            - run: make src/feedbox
            - working-directory: src/feedbox
              env:
                  CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
                  CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
                  CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
              run: |
                  wrangler publish

            - run: make src/current-ip
            - working-directory: src/current-ip
              env:
                  CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
                  CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
                  CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
              run: |
                  echo '${{ secrets.ROLLBAR_KEY }}' | wrangler secret put 'ROLLBAR_KEY'
                  echo '${{ secrets.ROLLBAR_TG_BOT_TOKEN }}' | wrangler secret put 'ROLLBAR_TG_BOT_TOKEN'
                  echo '${{ secrets.ROLLBAR_TG_CHAT_ID }}' | wrangler secret put 'ROLLBAR_TG_CHAT_ID'
                  wrangler publish

            - run: make src/bcc
            - working-directory: src/bcc
              env:
                  CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
                  CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
                  CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
              run: |
                  echo '${{ secrets.ROLLBAR_KEY }}' | wrangler secret put 'ROLLBAR_KEY'
                  echo '${{ secrets.DB_API }}' | wrangler secret put 'DB_API'
                  echo '${{ secrets.DB_TOKEN }}' | wrangler secret put 'DB_TOKEN'
                  echo '${{ secrets.BCC_WEBHOOK_PATH }}' | wrangler secret put 'BCC_WEBHOOK_PATH'
                  echo '${{ secrets.BCC_BOT_TOKEN }}' | wrangler secret put 'BCC_BOT_TOKEN'
                  wrangler publish
                  curl -s -f 'https://api.telegram.org/bot${{ secrets.BCC_BOT_TOKEN }}/setWebhook?url=https%3A%2F%2Fworker.h11.io%2Ftelegram%2Fbcc%2F${{ secrets.BCC_WEBHOOK_PATH }}'

            - run: make src/timeslayer
            - working-directory: src/timeslayer
              env:
                  CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
                  CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
                  CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
              run: |
                  echo '${{ secrets.ROLLBAR_KEY }}' | wrangler secret put 'ROLLBAR_KEY'
                  echo '${{ secrets.DB_API }}' | wrangler secret put 'DB_API'
                  echo '${{ secrets.DB_TOKEN }}' | wrangler secret put 'DB_TOKEN'
                  echo '${{ secrets.TIMESLAYER_WEBHOOK_PATH }}' | wrangler secret put 'TIMESLAYER_WEBHOOK_PATH'
                  echo '${{ secrets.TIMESLAYER_BOT_TOKEN }}' | wrangler secret put 'TIMESLAYER_BOT_TOKEN'
                  wrangler publish
                  curl -s -f 'https://api.telegram.org/bot${{ secrets.TIMESLAYER_BOT_TOKEN }}/setWebhook?url=https%3A%2F%2Fworker.h11.io%2Ftelegram%2Ftimeslayer%2F${{ secrets.TIMESLAYER_WEBHOOK_PATH }}'

            - run: make src/rollbar
            - working-directory: src/rollbar
              env:
                  CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
                  CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
                  CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
              run: |
                  echo '${{ secrets.ROLLBAR_TG_BOT_TOKEN }}' | wrangler secret put 'ROLLBAR_TG_BOT_TOKEN'
                  echo '${{ secrets.ROLLBAR_TG_CHAT_ID }}' | wrangler secret put 'ROLLBAR_TG_CHAT_ID'
                  wrangler publish

            - run: make src/backup
            - working-directory: src/backup
              env:
                  CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
                  CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
                  CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
              run: |
                  echo '${{ secrets.ROLLBAR_KEY }}' | wrangler secret put 'ROLLBAR_KEY'
                  echo '${{ secrets.BACKUP_B2_KEY_ID }}' | wrangler secret put 'BACKUP_B2_KEY_ID'
                  echo '${{ secrets.BACKUP_B2_KEY }}' | wrangler secret put 'BACKUP_B2_KEY'
                  echo '${{ secrets.BACKUP_B2_REGION }}' | wrangler secret put 'BACKUP_B2_REGION'
                  echo '${{ secrets.BACKUP_B2_BUCKET }}' | wrangler secret put 'BACKUP_B2_BUCKET'
                  echo '${{ secrets.BACKUP_PASS_BEANCOUNT }}' | wrangler secret put 'BACKUP_PASS_BEANCOUNT'
                  wrangler publish

            - run: make src/backup-heroku-pg
            - working-directory: src/backup-heroku-pg
              env:
                  CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
                  CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
                  CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
              run: |
                  echo '${{ secrets.ROLLBAR_KEY }}' | wrangler secret put 'ROLLBAR_KEY'
                  echo '${{ secrets.BACKUP_B2_KEY_ID }}' | wrangler secret put 'BACKUP_B2_KEY_ID'
                  echo '${{ secrets.BACKUP_B2_KEY }}' | wrangler secret put 'BACKUP_B2_KEY'
                  echo '${{ secrets.BACKUP_B2_REGION }}' | wrangler secret put 'BACKUP_B2_REGION'
                  echo '${{ secrets.BACKUP_B2_BUCKET }}' | wrangler secret put 'BACKUP_B2_BUCKET'
                  echo '${{ secrets.BACKUP_HEROKU_PG_APP }}' | wrangler secret put 'BACKUP_HEROKU_PG_APP'
                  echo '${{ secrets.BACKUP_HEROKU_PG_TOKEN }}' | wrangler secret put 'BACKUP_HEROKU_PG_TOKEN'
                  wrangler publish
