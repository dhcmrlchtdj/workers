name: deploy

on:
    push:
        branches:
            - master

jobs:
    deploy:
        # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#choosing-github-hosted-runners
        runs-on: ubuntu-20.04
        steps:
            # https://github.com/marketplace/actions/checkout
            - uses: actions/checkout@v3.0.2
            # https://github.com/marketplace/actions/setup-node-js-environment
            - uses: actions/setup-node@v3.1.1
              with:
                  node-version: 18
            # https://github.com/marketplace/actions/cache
            - uses: actions/cache@v3.0.2
              with:
                  path: ~/.local/share/pnpm/store
                  key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: ${{ runner.os }}-pnpm-
            - run: |
                  npm install -g pnpm@7
                  npm install -g wrangler@2.0.3
                  pnpm install
                  pnpm store prune

            - run: make test

            - run: make src/feedbox
            - working-directory: src/feedbox
              env:
                  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
                  CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
              run: |
                  wrangler publish

            - run: make src/current-ip
            - working-directory: src/current-ip
              env:
                  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
                  CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
                  ROLLBAR_KEY: ${{ secrets.ROLLBAR_KEY }}
                  ROLLBAR_TG_BOT_TOKEN: ${{ secrets.ROLLBAR_TG_BOT_TOKEN }}
                  ROLLBAR_TG_CHAT_ID: ${{ secrets.ROLLBAR_TG_CHAT_ID }}
                  IP_PASS_NUC: ${{ secrets.IP_PASS_NUC }}
              run: |
                  wrangler secret put 'ROLLBAR_KEY' --env
                  wrangler secret put 'ROLLBAR_TG_BOT_TOKEN' --env
                  wrangler secret put 'ROLLBAR_TG_CHAT_ID' --env
                  wrangler secret put 'IP_PASS_NUC' --env
                  wrangler publish

            - run: make src/bcc
            - working-directory: src/bcc
              env:
                  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
                  CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
                  ROLLBAR_KEY: ${{ secrets.ROLLBAR_KEY }}
                  DB_API: ${{ secrets.DB_API }}
                  DB_TOKEN: ${{ secrets.DB_TOKEN }}
                  BCC_BOT_TOKEN: ${{ secrets.BCC_BOT_TOKEN }}
              run: |
                  wrangler secret put 'ROLLBAR_KEY' --env
                  wrangler secret put 'DB_API' --env
                  wrangler secret put 'DB_TOKEN' --env
                  wrangler secret put 'BCC_BOT_TOKEN' --env
                  wrangler publish
                  curl -s -f 'https://api.telegram.org/bot${{ secrets.BCC_BOT_TOKEN }}/setWebhook?url=https%3A%2F%2Fworker.h11.io%2Ftelegram%2Fbcc%2F${{ secrets.BCC_WEBHOOK_PATH }}'

            - run: make src/rollbar
            - working-directory: src/rollbar
              env:
                  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
                  CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
                  ROLLBAR_TG_BOT_TOKEN: ${{ secrets.ROLLBAR_TG_BOT_TOKEN }}
                  ROLLBAR_TG_CHAT_ID: ${{ secrets.ROLLBAR_TG_CHAT_ID }}
              run: |
                  wrangler secret put 'ROLLBAR_TG_BOT_TOKEN' --env
                  wrangler secret put 'ROLLBAR_TG_CHAT_ID' --env
                  wrangler publish

            - run: make src/backup
            - working-directory: src/backup
              env:
                  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
                  CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
                  ROLLBAR_KEY: ${{ secrets.ROLLBAR_KEY }}
                  BACKUP_PASS_BEANCOUNT: ${{ secrets.BACKUP_PASS_BEANCOUNT }}
              run: |
                  wrangler secret put 'ROLLBAR_KEY' --env
                  wrangler secret put 'BACKUP_PASS_BEANCOUNT' --env
                  wrangler publish

            - run: make src/backup-heroku-pg
            - working-directory: src/backup-heroku-pg
              env:
                  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
                  CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
                  ROLLBAR_KEY: ${{ secrets.ROLLBAR_KEY }}
                  BACKUP_HEROKU_PG_APP: ${{ secrets.BACKUP_HEROKU_PG_APP }}
                  BACKUP_HEROKU_PG_TOKEN: ${{ secrets.BACKUP_HEROKU_PG_TOKEN }}
              run: |
                  wrangler secret put 'ROLLBAR_KEY' --env
                  wrangler secret put 'BACKUP_HEROKU_PG_APP' --env
                  wrangler secret put 'BACKUP_HEROKU_PG_TOKEN' --env
                  wrangler publish
